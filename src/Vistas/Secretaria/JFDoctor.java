/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas.Secretaria;

import Clases.Medico;
import Controladores.MedicoController;
import Vistas.Doctor.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import validaciones.*;


public class JFDoctor extends javax.swing.JFrame {

    private boolean cedulaEsValida = false;
    private boolean nombreEsValido = false;
    private boolean apellidoEsValido = false;
    private boolean correoEsValido = false;
    private boolean telefonoEsValido = false;
    private boolean direccionEsValida = false;
    
    //ClasesValidadoras
    ValidadorDeRegistros validarRegistroF = new ValidadorDeRegistros();
    ValidadorDeSwings validadorCheck = new ValidadorDeSwings();
    
    public JFDoctor() {
        initComponents();
        
        jTFBusquedaCI.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                refrescarTablaMedicos(); 
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                refrescarTablaMedicos();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                refrescarTablaMedicos();
            }
        });        
        refrescarTablaMedicos();
    }

    private void refrescarTablaMedicos() {
        DefaultTableModel model = new DefaultTableModel();
        jTMedicos.setModel(model);
        String[] columnNames = {
                "Cédula", "Nombres", "Apellidos" 
        };
        model.setColumnIdentifiers(columnNames);

        String cedulaBusqueda = jTFBusquedaCI.getText(); // Asumiendo que usas el mismo campo de búsqueda
        List<Medico> medicos;

        if (cedulaBusqueda.isEmpty()) {
            // Si el campo de búsqueda está vacío, mostrar todos los médicos
            medicos = new MedicoController().obtenerMedicosRegistrados();
        } else {
            // Si hay texto en el campo de búsqueda, filtrar por cédula
            Medico medicoEncontrado = new MedicoController().buscarMedicoPorCedula(cedulaBusqueda);
            medicos = (medicoEncontrado != null) ? Arrays.asList(medicoEncontrado) : new ArrayList<>();
        }

        for (Medico medico : medicos) {
            model.addRow(new Object[]{
                    medico.getCedula(),
                    medico.getNombre(),
                    medico.getApellidos()
            });
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel69 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLTipoCli = new javax.swing.JLabel();
        jTFCI = new javax.swing.JTextField();
        jLabel66 = new javax.swing.JLabel();
        jTFNombresR = new javax.swing.JTextField();
        jLabel89 = new javax.swing.JLabel();
        jTFApellidos = new javax.swing.JTextField();
        jLabel88 = new javax.swing.JLabel();
        jTFContrasenia = new javax.swing.JTextField();
        jLTipoCli1 = new javax.swing.JLabel();
        jBGuardarMedico = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTMedicos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTFBusquedaCI = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(146, 10, 48));
        jPanel3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel3MouseDragged(evt);
            }
        });
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel3MousePressed(evt);
            }
        });
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel69.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(255, 255, 255));
        jLabel69.setText("Paciente");
        jPanel3.add(jLabel69, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 0, -1, -1));

        jLTipoCli.setText("CI");

        jTFCI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFCIFocusLost(evt);
            }
        });
        jTFCI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFCIKeyReleased(evt);
            }
        });

        jLabel66.setText("Nombres");

        jTFNombresR.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFNombresRFocusLost(evt);
            }
        });
        jTFNombresR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFNombresRKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFNombresRKeyTyped(evt);
            }
        });

        jLabel89.setText("Apellidos");

        jTFApellidos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFApellidosFocusLost(evt);
            }
        });
        jTFApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFApellidosKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFApellidosKeyTyped(evt);
            }
        });

        jLabel88.setText("Contraseña");

        jTFContrasenia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFContraseniaFocusLost(evt);
            }
        });
        jTFContrasenia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFContraseniaKeyReleased(evt);
            }
        });

        jLTipoCli1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLTipoCli1.setText("REGISTRO MEDICO");

        jBGuardarMedico.setText("Guardar Medico");
        jBGuardarMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarMedicoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLTipoCli1)
                            .addComponent(jLabel66)
                            .addComponent(jLTipoCli)
                            .addComponent(jLabel89)
                            .addComponent(jTFNombresR, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                            .addComponent(jTFCI)
                            .addComponent(jTFApellidos)
                            .addComponent(jTFContrasenia)
                            .addComponent(jLabel88)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jBGuardarMedico)))
                .addContainerGap(661, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLTipoCli1)
                .addGap(31, 31, 31)
                .addComponent(jLTipoCli)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTFCI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel66)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFNombresR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel89)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel88)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jBGuardarMedico)
                .addContainerGap(96, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Registrar", jPanel1);

        jTMedicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTMedicos);

        jLabel1.setText("Busqueda CI:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTFBusquedaCI, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(312, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTFBusquedaCI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Lista", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 926, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel3MouseDragged

    private void jPanel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel3MousePressed

    private void jTFApellidosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFApellidosKeyTyped
        int maxLength = 64; // Límite de longitud de caracteres
        if (jTFApellidos.getText().length() >= maxLength) {
            evt.consume();
        }
    }//GEN-LAST:event_jTFApellidosKeyTyped

    private void jTFApellidosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFApellidosKeyReleased
        apellidoEsValido = validarRegistroF.camposDeRegistros(jTFApellidos, "nombre");
    }//GEN-LAST:event_jTFApellidosKeyReleased

    private void jTFApellidosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFApellidosFocusLost
        apellidoEsValido = validarRegistroF.camposDeRegistros(jTFApellidos, "nombre");
        validarRegistroF.hideTooltip();
    }//GEN-LAST:event_jTFApellidosFocusLost

    private void jTFNombresRKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFNombresRKeyTyped
        int maxLength = 40; // Límite de longitud de caracteres
        if (jTFNombresR.getText().length() >= maxLength) {
            evt.consume();
        }
    }//GEN-LAST:event_jTFNombresRKeyTyped

    private void jTFNombresRKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFNombresRKeyReleased
        nombreEsValido = validarRegistroF.camposDeRegistros(jTFNombresR, "nombre");
    }//GEN-LAST:event_jTFNombresRKeyReleased

    private void jTFNombresRFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFNombresRFocusLost
        nombreEsValido = validarRegistroF.camposDeRegistros(jTFNombresR, "nombre");
        validarRegistroF.hideTooltip();
    }//GEN-LAST:event_jTFNombresRFocusLost

    private void jTFCIKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFCIKeyReleased
        cedulaEsValida = validarRegistroF.camposDeRegistros(jTFCI, "cedula");
    }//GEN-LAST:event_jTFCIKeyReleased

    private void jTFCIFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFCIFocusLost
        cedulaEsValida = validarRegistroF.camposDeRegistros(jTFCI, "cedula");
        validarRegistroF.hideTooltip();
    }//GEN-LAST:event_jTFCIFocusLost

    private void jTFContraseniaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFContraseniaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFContraseniaKeyReleased

    private void jTFContraseniaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFContraseniaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFContraseniaFocusLost

    private void jBGuardarMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarMedicoActionPerformed
        // Obtener los datos del médico desde los campos de texto
        String cedula = jTFCI.getText();
        String nombres = jTFNombresR.getText();
        String apellidos = jTFApellidos.getText();
        String contrasenia = jTFContrasenia.getText(); // Obtener contraseña de forma segura

        ValidadorDeRegistros camposDeRegistros = new ValidadorDeRegistros();

        // Validar los datos (puedes usar la función camposDeRegistros si la tienes implementada)
        if (camposDeRegistros.camposDeRegistros(jTFCI, "cedula") &&
            camposDeRegistros.camposDeRegistros(jTFNombresR, "nombre") &&
            camposDeRegistros.camposDeRegistros(jTFApellidos, "apellidos") &&
            camposDeRegistros.camposDeRegistros(jTFContrasenia, "contraseña")) { // Asegúrate de tener un caso "contraseña" en camposDeRegistros

            // Crear un nuevo objeto Medico
            Medico nuevoMedico = new Medico(nombres, apellidos, cedula, contrasenia);

            // Registrar el médico usando MedicoController
            MedicoController medicoController = new MedicoController();
            medicoController.registrarMedico(nuevoMedico);

            // Mostrar un mensaje de éxito
            JOptionPane.showMessageDialog(this, "Médico registrado exitosamente", "Registro exitoso", JOptionPane.INFORMATION_MESSAGE);

            // Limpiar los campos de texto después del registro (opcional)
            jTFCI.setText("");
            jTFNombresR.setText("");
            jTFApellidos.setText("");
            jTFContrasenia.setText("");

            // Actualizar la tabla de médicos (similar a como lo hacías con los pacientes)
            refrescarTablaMedicos(); 
        } 
    }//GEN-LAST:event_jBGuardarMedicoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFDoctor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBGuardarMedico;
    private javax.swing.JLabel jLTipoCli;
    private javax.swing.JLabel jLTipoCli1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFApellidos;
    private javax.swing.JTextField jTFBusquedaCI;
    private javax.swing.JTextField jTFCI;
    private javax.swing.JTextField jTFContrasenia;
    private javax.swing.JTextField jTFNombresR;
    private javax.swing.JTable jTMedicos;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
