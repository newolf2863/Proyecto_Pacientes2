/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas.Doctor;

import Clases.AntecedentePatologico;
import Clases.Consulta;
import Clases.Diagnostico;
import Clases.ExamenFisico;
import Clases.HistoriaClinica;
import Clases.Medico;
import Clases.Paciente;
import Clases.SignosVitales;
import Clases.Tratamiento;
import Controladores.AntecedentePatologicoController;
import Controladores.ConsultaController;
import Controladores.PacienteController;
import Controladores.HistoriasClinicasController;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.IOException;
import java.net.PasswordAuthentication;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import validaciones.ValidadorDeRegistros;

//import javax.mail.*;
//import javax.mail.internet.InternetAddress;
//import javax.mail.internet.MimeMessage;
//import java.util.Properties; 


public class JPConsulta extends javax.swing.JFrame {

    /**
     * Creates new form JPConsulta
     */
    private Medico medicoActual;
    public JPConsulta(Medico medico) {
        this.medicoActual = medico;
        initComponents();
        
    }
    
    // Método para mostrar el correo del paciente o limpiar el campo
    private void mostrarCorreoPaciente() {
        
        String cedula = JTFCIPaciente1.getText();
        Paciente paciente = new PacienteController().buscarPacientePorCedula(cedula);
        
        if (paciente.getCedula().equals(cedula)) {
            JTFCorreoPaciente.setText(paciente.getCorreoElectronico());
        }else {
                JTFCorreoPaciente.setText(""); // Limpiar el campo si no se encuentra el paciente
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel69 = new javax.swing.JLabel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTAMotivo = new javax.swing.JTextArea();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        JTFPeso = new javax.swing.JTextField();
        JTFTemperatura = new javax.swing.JTextField();
        JTFPresionArterial = new javax.swing.JTextField();
        JTFSaturacionO2 = new javax.swing.JTextField();
        jInternalFrame3 = new javax.swing.JInternalFrame();
        jScrollPane3 = new javax.swing.JScrollPane();
        JTAHallazgos = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jInternalFrame5 = new javax.swing.JInternalFrame();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        JCBCodigoCIE = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTADescripcionDiagnostico = new javax.swing.JTextArea();
        jInternalFrame6 = new javax.swing.JInternalFrame();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        JTFMedicacion = new javax.swing.JTextField();
        JTFPosologia = new javax.swing.JTextField();
        JBGuardarConsulta = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        JTFCorreoPaciente = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        JTFCIPaciente1 = new javax.swing.JTextField();
        JBBuscarCorreo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(146, 10, 48));
        jPanel3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel3MouseDragged(evt);
            }
        });
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel3MousePressed(evt);
            }
        });
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel69.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(255, 255, 255));
        jLabel69.setText("Consulta");
        jPanel3.add(jLabel69, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 0, -1, -1));

        jInternalFrame1.setTitle("Motivo Consulta");
        jInternalFrame1.setVisible(true);

        jLabel1.setText("Motivo");

        JTAMotivo.setColumns(20);
        JTAMotivo.setRows(5);
        jScrollPane2.setViewportView(JTAMotivo);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                .addContainerGap())
        );

        jInternalFrame2.setTitle("Signos Vitales");
        jInternalFrame2.setVisible(true);

        jLabel2.setText("Temperatura");

        jLabel3.setText("Peso");

        jLabel4.setText("Presión Arterial");

        jLabel5.setText("Saturación O2");

        JTFPeso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTFPesoActionPerformed(evt);
            }
        });

        JTFTemperatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTFTemperaturaActionPerformed(evt);
            }
        });

        JTFPresionArterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTFPresionArterialActionPerformed(evt);
            }
        });

        JTFSaturacionO2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTFSaturacionO2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JTFPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JTFTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JTFPresionArterial, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JTFSaturacionO2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(JTFTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(JTFPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(JTFPresionArterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(JTFSaturacionO2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jInternalFrame3.setTitle("Examen Físico");
        jInternalFrame3.setVisible(true);

        JTAHallazgos.setColumns(20);
        JTAHallazgos.setRows(5);
        jScrollPane3.setViewportView(JTAHallazgos);

        jLabel6.setText("Hallazgos");

        javax.swing.GroupLayout jInternalFrame3Layout = new javax.swing.GroupLayout(jInternalFrame3.getContentPane());
        jInternalFrame3.getContentPane().setLayout(jInternalFrame3Layout);
        jInternalFrame3Layout.setHorizontalGroup(
            jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                .addContainerGap())
        );
        jInternalFrame3Layout.setVerticalGroup(
            jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                .addContainerGap())
        );

        jInternalFrame5.setTitle("Diagnostico");
        jInternalFrame5.setVisible(true);

        jLabel13.setText("Código CIE");

        jLabel14.setText("Descripción diagnostico");

        JCBCodigoCIE.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "selección", "A00", "A01", "A02", "A03", "A04", "A05", "A06", "A07", "A08", "A09", "B00", "B01", "B02", "B03", "B04", "B05", "B06", "B07", "B08", "B09", " " }));
        JCBCodigoCIE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCBCodigoCIEActionPerformed(evt);
            }
        });

        JTADescripcionDiagnostico.setColumns(20);
        JTADescripcionDiagnostico.setRows(5);
        jScrollPane1.setViewportView(JTADescripcionDiagnostico);

        javax.swing.GroupLayout jInternalFrame5Layout = new javax.swing.GroupLayout(jInternalFrame5.getContentPane());
        jInternalFrame5.getContentPane().setLayout(jInternalFrame5Layout);
        jInternalFrame5Layout.setHorizontalGroup(
            jInternalFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jInternalFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jInternalFrame5Layout.createSequentialGroup()
                        .addGroup(jInternalFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame5Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(87, 87, 87)
                                .addComponent(JCBCodigoCIE, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel14))
                        .addGap(0, 103, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jInternalFrame5Layout.setVerticalGroup(
            jInternalFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame5Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jInternalFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(JCBCodigoCIE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                .addContainerGap())
        );

        jInternalFrame6.setTitle("Tratamiento");
        jInternalFrame6.setVisible(true);

        jLabel15.setText("Medicación");

        jLabel16.setText("Posología");

        javax.swing.GroupLayout jInternalFrame6Layout = new javax.swing.GroupLayout(jInternalFrame6.getContentPane());
        jInternalFrame6.getContentPane().setLayout(jInternalFrame6Layout);
        jInternalFrame6Layout.setHorizontalGroup(
            jInternalFrame6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame6Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jInternalFrame6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jInternalFrame6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JTFPosologia, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                    .addComponent(JTFMedicacion))
                .addGap(28, 28, 28))
        );
        jInternalFrame6Layout.setVerticalGroup(
            jInternalFrame6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame6Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jInternalFrame6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(JTFMedicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jInternalFrame6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16)
                    .addComponent(JTFPosologia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        JBGuardarConsulta.setText("Guardar Consulta");
        JBGuardarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBGuardarConsultaActionPerformed(evt);
            }
        });

        jLabel7.setText("CI Paciente:");

        JTFCorreoPaciente.setEnabled(false);
        JTFCorreoPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTFCorreoPacienteActionPerformed(evt);
            }
        });

        jLabel9.setText("Correo Paciente:");

        JTFCIPaciente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTFCIPaciente1ActionPerformed(evt);
            }
        });

        JBBuscarCorreo.setText("Buscar Correo");
        JBBuscarCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBBuscarCorreoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jInternalFrame1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jInternalFrame2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jInternalFrame3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jInternalFrame5)
                    .addComponent(jInternalFrame6))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(JBGuardarConsulta)
                        .addGap(18, 18, 18)
                        .addComponent(JBBuscarCorreo))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(JTFCorreoPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(JTFCIPaciente1))))
                .addGap(62, 62, 62))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jInternalFrame5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(JTFCIPaciente1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(JTFCorreoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(JBGuardarConsulta)
                                    .addComponent(JBBuscarCorreo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jInternalFrame6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jInternalFrame2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jInternalFrame3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel3MouseDragged

    private void jPanel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel3MousePressed

    private void JTFPesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTFPesoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTFPesoActionPerformed

    private void JTFTemperaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTFTemperaturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTFTemperaturaActionPerformed

    private void JTFPresionArterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTFPresionArterialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTFPresionArterialActionPerformed

    private void JTFSaturacionO2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTFSaturacionO2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTFSaturacionO2ActionPerformed

    private void JCBCodigoCIEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCBCodigoCIEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCBCodigoCIEActionPerformed

    private void JTFCorreoPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTFCorreoPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTFCorreoPacienteActionPerformed

    private void JTFCIPaciente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTFCIPaciente1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTFCIPaciente1ActionPerformed

    private void JBGuardarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBGuardarConsultaActionPerformed
        // Obtener datos del paciente
        String cedulaPaciente = JTFCIPaciente1.getText();
        String cedulaMedico = medicoActual.getCedula();
        Paciente paciente = new PacienteController().buscarPacientePorCedula(cedulaPaciente);

        if (paciente == null) {
            JOptionPane.showMessageDialog(this, "Paciente no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Salir si el paciente no existe
        }

        // Obtener datos de la consulta
        String motivoConsulta = JTAMotivo.getText();
        String hallazgos = JTAHallazgos.getText();
        String descripcionDiagnostico = JTADescripcionDiagnostico.getText();
        String codigoCIE = (String) JCBCodigoCIE.getSelectedItem(); // Asumiendo que JCBCodigoCIE es un JComboBox
        String medicacion = JTFMedicacion.getText();
        String posologia = JTFPosologia.getText();

        // Crear objetos relacionados con la consulta
        SignosVitales signosVitales = new SignosVitales(
            Double.parseDouble(JTFTemperatura.getText()),
            Double.parseDouble(JTFPeso.getText()),
            Double.parseDouble(JTFPresionArterial.getText()),
            Double.parseDouble(JTFSaturacionO2.getText())
        );
        ExamenFisico examenFisico = new ExamenFisico(hallazgos);
        Diagnostico diagnostico = new Diagnostico(codigoCIE, descripcionDiagnostico);
        Tratamiento tratamiento = new Tratamiento(medicacion, posologia);

        // Crear la consulta
        Consulta nuevaConsulta = new Consulta(motivoConsulta, signosVitales, examenFisico, diagnostico, tratamiento, paciente, medicoActual);

        // Registrar la consulta
        ConsultaController consultaController = new ConsultaController();
        consultaController.editarConsulta(cedulaPaciente, cedulaMedico, motivoConsulta,
                signosVitales, examenFisico, diagnostico, tratamiento ); // O el método que uses para guardar consultas

        // Crear y registrar el nuevo AntecedentePatologico
        AntecedentePatologico nuevoAntecedente = new AntecedentePatologico(
            diagnostico.getCodigoCIE(), // Usar el código CIE de la consulta actual
            examenFisico.getHallazgos(), // Usar los hallazgos del examen físico de la consulta actual
            paciente
        );
        AntecedentePatologicoController antecedenteController = new AntecedentePatologicoController();
        antecedenteController.registrarAntecedentePatologico(nuevoAntecedente, null);
        
        // Obtener o crear el historial clínico del paciente
        HistoriasClinicasController historiasClinicasController = new HistoriasClinicasController();
        HistoriaClinica historiaClinica = historiasClinicasController.obtenerHistoriaClinicaPorCedula(cedulaPaciente);
        if (historiaClinica == null) {
            // Si no existe, crear una nueva historia clínica
            historiaClinica = new HistoriaClinica(paciente, new ArrayList<>(), new ArrayList<>());
        }

        // Agregar la nueva consulta al historial clínico
        historiaClinica.getConsultas().add(nuevaConsulta);

        // Obtener los antecedentes patológicos del paciente (puedes optimizar esto si ya los tienes en memoria)
        //AntecedentePatologicoController antecedenteController = new AntecedentePatologicoController();
        List<AntecedentePatologico> antecedentesPatologicos = null;
        try {
            antecedentesPatologicos = antecedenteController.obtenerAntecedentesPorPaciente(paciente);
        } catch (IOException ex) {
            Logger.getLogger(JPConsulta.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Actualizar el historial clínico con los antecedentes (si es necesario)
        historiaClinica.setAntecedentesPatologicos(antecedentesPatologicos);

        // Registrar o actualizar el historial clínico
        historiasClinicasController.registrarHistoriaClinica(historiaClinica);

        
        
        // Mostrar mensaje de éxito
        JOptionPane.showMessageDialog(this, "Consulta registrada exitosamente", "Éxito", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_JBGuardarConsultaActionPerformed

    private void JBBuscarCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBBuscarCorreoActionPerformed
        mostrarCorreoPaciente();
    }//GEN-LAST:event_JBBuscarCorreoActionPerformed

    
        /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JPConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JPConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JPConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JPConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new JPConsulta().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBBuscarCorreo;
    private javax.swing.JButton JBGuardarConsulta;
    private javax.swing.JComboBox<String> JCBCodigoCIE;
    private javax.swing.JTextArea JTADescripcionDiagnostico;
    private javax.swing.JTextArea JTAHallazgos;
    private javax.swing.JTextArea JTAMotivo;
    private javax.swing.JTextField JTFCIPaciente1;
    private javax.swing.JTextField JTFCorreoPaciente;
    private javax.swing.JTextField JTFMedicacion;
    private javax.swing.JTextField JTFPeso;
    private javax.swing.JTextField JTFPosologia;
    private javax.swing.JTextField JTFPresionArterial;
    private javax.swing.JTextField JTFSaturacionO2;
    private javax.swing.JTextField JTFTemperatura;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JInternalFrame jInternalFrame3;
    private javax.swing.JInternalFrame jInternalFrame5;
    private javax.swing.JInternalFrame jInternalFrame6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables

    private void enviarCorreo(String correoPaciente, String asunto, String cuerpo) {
//        // 1. Configuración de propiedades de JavaMail
//        Properties props = new Properties();
//        props.put("mail.smtp.auth", "true"); // Requiere autenticación
//        props.put("mail.smtp.starttls.enable", "true"); // Habilitar TLS
//        props.put("mail.smtp.host", "smtp.gmail.com"); // Servidor SMTP de Gmail (ajusta según tu proveedor)
//        props.put("mail.smtp.port", "587"); // Puerto SMTP de Gmail (ajusta según tu proveedor)
//
//        // 2. Crear sesión de correo
//        Session session = Session.getInstance(props, new javax.mail.Authenticator() {
//            protected PasswordAuthentication getPasswordAuthentication() {
//                return new PasswordAuthentication("issacdelacadena@gmail.com", "unsc2863@");   
//     // Reemplaza con tus credenciales
//            }
//        });
//
//        // 3. Crear el mensaje
//        Message message = new MimeMessage(session);
//        message.setFrom(new InternetAddress("issacdelacadena@gmail.com")); // Reemplaza con tu correo
//        message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(destinatario));
//        message.setSubject(asunto);
//        message.setText(cuerpo);   
//
//
//        // 4. Enviar el mensaje
//        Transport.send(message);
        
    }
}
